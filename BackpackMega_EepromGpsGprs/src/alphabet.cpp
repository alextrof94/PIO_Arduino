#include <Arduino.h>

#define ALPHABET_COUNT 71

const char alphabet[ALPHABET_COUNT] PROGMEM = {
  ' ', 
  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 
  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',  
  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
 //Б    Г    Д    Ж    З    И    Й    Л    П    Ф    Ц    Ч    Ш    Щ    Ь    Ы    Ъ    Э    Ю    Я
  'q', 'u', 'l', 'w', 'p', 'b', 'd', 'k', 'g', 'a', 'y', 'x', 'i', 'o', 'm', 's', 'e', 'r', 't', 'z', 
  '.', ',', '!', '?', '<', '>', '+', '-', '=', '(', ')', ':', '_', '"'
};

const uint8_t alphabetLengths[ALPHABET_COUNT] PROGMEM = {
  3,
  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
  5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5,
  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
  5, 5, 6, 5, 5, 5, 5, 5, 5, 5, 6, 5, 7, 8, 5, 7, 7, 5, 5, 5,
  1, 1, 1, 5, 3, 3, 3, 3, 3, 2, 2, 1, 3, 3
};
/* 5 50 250
// 6 3   18
// 7 3   21
// 1 4    4
// 2 2    4
// 3 8   24
// 8 1    8
*/

const uint8_t chars[329] PROGMEM = {
  B00000000,
  B00000000,
  B00000000,
  
  B01111110,
  B00001001,
  B00001001,
  B00001001,
  B01111110,

  B01111111,
  B01001001,
  B01001001,
  B01001001,
  B00110110,

  B00111110,
  B01000001,
  B01000001,
  B01000001,
  B00100010,
  
  B01111111,
  B01000001,
  B01000001,
  B01000001,
  B00111110,
  
  B01111111,
  B01001001,
  B01001001,
  B01001001,
  B01001001,

  B01111111,
  B00001001,
  B00001001,
  B00001001,
  B00001001,

  B00111110,
  B01000001,
  B01001001,
  B01001001,
  B00110010,

  B01111111,
  B00001000,
  B00001000,
  B00001000,
  B01111111,

  B01000001,
  B01000001,
  B01111111,
  B01000001,
  B01000001,

  B00100000,
  B01000000,
  B01000001,
  B01000001,
  B00111111,

  B01111111,
  B00001000,
  B00010100,
  B00100010,
  B01000001,

  B01111111,
  B01000000,
  B01000000,
  B01000000,
  B01100000,

  B01111111,
  B00000010,
  B00000100,
  B00000010,
  B01111111,

  B01111111,
  B00000010,
  B00000100,
  B00001000,
  B01111111,

  B00111110,
  B01000001,
  B01000001,
  B01000001,
  B00111110,

  B01111111,
  B00001001,
  B00001001,
  B00001001,
  B00000110,

  B00111110,
  B01000001,
  B01010001,
  B01100001,
  B01111110,
  B10000000,

  B01111111,
  B00001001,
  B00011001,
  B00101001,
  B01000110,

  B01000110,
  B01001001,
  B01001001,
  B01001001,
  B00110001,

  B00000001,
  B00000001,
  B01111111,
  B00000001,
  B00000001,
  
  B00111111,
  B01000000,
  B01000000,
  B01000000,
  B00111111,

  B00000111,
  B00011000,
  B01100000,
  B00011000,
  B00000111,

  B01111111,
  B00100000,
  B00010000,
  B00100000,
  B01111111,
  
  B01100011,
  B00010100,
  B00001000,
  B00010100,
  B01100011,
  
  B00100111,
  B01001000,
  B01001000,
  B01001000,
  B00111111,

  B01100001,
  B01010001,
  B01001001,
  B01000101,
  B01000011,
  
  // NUMS 
  B00111110,
  B01010001,
  B01001001,
  B01000101,
  B00111110,
  
  B01000100,
  B01000010,
  B01111111,
  B01000000,
  B01000000,
  
  B01000010,
  B01100001,
  B01010001,
  B01001001,
  B01000110,
  
  B00100010,
  B01000001,
  B01000001,
  B01001001,
  B00110110,

  B00001100,
  B00001010,
  B00001001,
  B01111111,
  B00001000,
  
  B00101111,
  B01001001,
  B01001001,
  B01001001,
  B00110001,
  
  B00111110,
  B01001001,
  B01001001,
  B01001001,
  B00110010,
  
  B00000011,
  B00000001,
  B01110001,
  B00001001,
  B00000111,
  
  B00110110,
  B01001001,
  B01001001,
  B01001001,
  B00110110,
  
  B00100110,
  B01001001,
  B01001001,
  B01001001,
  B00111110,
  
  // RUS

  B01111111,
  B01001001,
  B01001001,
  B01001001,
  B00110001,

  B01111111,
  B00000001,
  B00000001,
  B00000001,
  B00000011,

  B11000000,
  B01111110,
  B01000001,
  B01000001,
  B01111111,
  B11000000,

  B01100011,
  B00011100,
  B01111111,
  B00011100,
  B01100011,
  
  B01000001,
  B01000001,
  B01000001,
  B01001001,
  B01110111,
  
  B01111111,
  B00100000,
  B00010000,
  B00001000,
  B01111111,
  
  B01111111,
  B00100000,
  B00010001,
  B00001000,
  B01111111,

  B01111000,
  B00000100,
  B00000010,
  B00000001,
  B01111111,
  
  B01111111,
  B00000001,
  B00000001,
  B00000001,
  B01111111,

  B00000110,
  B00001001,
  B01111111,
  B00001001,
  B00000110, 

  B01111111,
  B01000000,
  B01000000,
  B01000000,
  B01111111,
  B11000000,

  B00001111,
  B00001000,
  B00001000,
  B00001000,
  B01111111,

  B01111111,
  B01000000,
  B01000000,
  B01111111,
  B01000000,
  B01000000,
  B01111111,
  
  B01111111,
  B01000000,
  B01000000,
  B01111111,
  B01000000,
  B01000000,
  B01111111,
  B11000000,
  
  B01111111,
  B01001000,
  B01001000,
  B01001000,
  B00110000,

  B01111111,
  B01001000,
  B01001000,
  B01001000,
  B00110000,
  B00000000,
  B01111111,
  
  B00000010,
  B00000001,
  B01111111,
  B01001000,
  B01001000,
  B01001000,
  B00110000,

  B00100010,
  B01000001,
  B01001001,
  B01001001,
  B00111110,
  
  B01111111,
  B00001000,
  B00111110,
  B01000001,
  B00111110,
  
  B01000110,
  B00101001,
  B00011001,
  B00001001,
  B01111111,

  // CHARS

  B01000000,
  
  B11000000,

  B01011111,

  B00000010,
  B00000001,
  B01010001,
  B00001001,
  B00000110,
  
  B00001000,
  B00010100,
  B00100010,
  
  B00100010,
  B00010100,
  B00001000,
  
  B00001000,
  B00011100,
  B00001000,
  
  B00001000,
  B00001000,
  B00001000,
  
  B00010100,
  B00010100,
  B00010100,

  B00111110,
  B01000001,
  
  B01000001,
  B00111110,

  B01001000,
  
  B10000000,
  B10000000,
  B10000000,
  
  B00000111,
  B00000000,
  B00000111
};
